import { InjectionToken } from "@angular/core";
import { AnimationIndexAction } from "./models/actions/actions";
import { AnimationFrame } from "./models/animation/animation-frame";
import { GridDimensions } from "./models/grid/grid";
import { WeightGrid } from "./models/grid/weight-grid";
import { BridgeService } from "./services/bridge";
import { ProblemStatement } from "./models/problem-statement/problem-statement";
import { BarrierGrid } from "./models/grid/barrier-grid";
import { Pos } from "./models/grid/pos";
import { HeuristicDistFromGoalGrid } from "./models/grid/heuristic-dist-from-goal-grid";

export const animate = new InjectionToken<BridgeService<AnimationIndexAction>>('bridgeFromAnimate');
export const animationFrames = new InjectionToken<BridgeService<AnimationFrame[]>>('bridgeFromAnimationFrames');
export const animationIndex = new InjectionToken<BridgeService<number>>('bridgeFromAnimationIndex');
export const animationRunning = new InjectionToken<BridgeService<boolean>>('bridgeFromAnimationRunning');
export const currentAnimationFrame = new InjectionToken<BridgeService<AnimationFrame>>('bridgeFromCurrentAnimationFrame');
export const gridDimensions = new InjectionToken<BridgeService<GridDimensions>>('bridgeFromGridDimensions');
export const problemStatementChanges = new InjectionToken<BridgeService<ProblemStatement>>('bridgeFromProblemStatementChanges');
export const weightGrid = new InjectionToken<BridgeService<WeightGrid>>('bridgeFromWeightGrid');
export const barrierGrid = new InjectionToken<BridgeService<BarrierGrid>>('bridgeFromBarrierGrid');
export const startPos = new InjectionToken<BridgeService<Pos>>('bridgeFromStartPos');
export const goalPos = new InjectionToken<BridgeService<Pos>>('bridgeFromGoalPos');
export const heuristicDistGrid = new InjectionToken<BridgeService<HeuristicDistFromGoalGrid>>('heuristicDistGrid');
export const lastPosDraggedFrom = new InjectionToken<BridgeService<Pos | null>>('lastPosDraggedFrom');